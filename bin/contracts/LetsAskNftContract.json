{
    "contractName": "LetsAskNftContract",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "to",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "data",
                    "type": "string"
                }
            ],
            "name": "mintLetsAskNft",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"mintLetsAskNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/vigneshwaran/apps/blockchain/letsask/contract/contracts/LetsAskNftContract.sol\":\"LetsAskNftContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/vigneshwaran/apps/blockchain/letsask/contract/contracts/LetsAskNftContract.sol\":{\"keccak256\":\"0x1766cef5f5b7703a176e6f88119c5f9b082a5ea2d76fa24e22bb7ea215469724\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c611030fa06fc89227644950b3da8b7a1525c8e0b1e2b4eb31d70f567e97e3b7\",\"dweb:/ipfs/QmZ7VUDFE7tJGgiXhrnQdFHiy7jsKhHrzkgHJVFj1hCTgw\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
    "bytecode": "6101e060405261012f60808181529062001ff860a03980516200002b916008916020909101906200015c565b503480156200003957600080fd5b5060408051808201825260078152664c65747341736b60c81b6020808301918252835180850190945260028452614c4160f01b90840152815191929162000083916000916200015c565b508051620000999060019060208401906200015c565b505050620000e76040518060400160405280601e81526020017f4c65747341736b4e6674436f6e747261637420436f6e7374727563746f720000815250620000ed60201b620009521760201c565b62000297565b620001388160405160240162000104919062000202565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b179091526200013b16565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546200016a906200025a565b90600052602060002090601f0160209004810192826200018e5760008555620001d9565b82601f10620001a957805160ff1916838001178555620001d9565b82800160010185558215620001d9579182015b82811115620001d9578251825591602001919060010190620001bc565b50620001e7929150620001eb565b5090565b5b80821115620001e75760008155600101620001ec565b600060208083528351808285015260005b81811015620002315785810183015185820160400152820162000213565b8181111562000244576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806200026f57607f821691505b602082108114156200029157634e487b7160e01b600052602260045260246000fd5b50919050565b611d5180620002a76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c5780632862b1471461017f57806342842e0e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004611503565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e9190611578565b61013f61013a36600461158b565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a6101653660046115c0565b6103c7565b005b61016a61017a3660046115ea565b6104dd565b61016a61018d3660046116d2565b61050e565b61016a6101a03660046115ea565b61066c565b61013f6101b336600461158b565b610687565b6101cb6101c6366004611736565b6106fe565b60405190815260200161010e565b61011f610785565b61016a6101ef366004611751565b610794565b61016a61020236600461178d565b6107a3565b61011f61021536600461158b565b6107db565b610102610228366004611809565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b79061183c565b80601f01602080910402602001604051908101604052809291908181526020018280546102e39061183c565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b600061034582610998565b6103ab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103d282610687565b9050806001600160a01b0316836001600160a01b031614156104405760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a2565b336001600160a01b038216148061045c575061045c8133610228565b6104ce5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a2565b6104d883836109b5565b505050565b6104e73382610a23565b6105035760405162461bcd60e51b81526004016103a290611877565b6104d8838383610b09565b60008151116105585760405162461bcd60e51b8152602060048201526016602482015275115b5c1d1e481c5d595cdd1a5bdb881d1bc81b5a5b9d60521b60448201526064016103a2565b600061056360075490565b9050600060088360405160200161057b9291906118e4565b6040516020818303038152906040529050600082856040516020016105a19291906119a7565b604051602081830303815290604052905060006105e6826105c185610ca5565b6040516020016105d29291906119eb565b604051602081830303815290604052610ca5565b90506000816040516020016105fb9190611ab5565b60405160208183030381529060405290506106163386610e0b565b6106208582610e25565b61062e600780546001019055565b6106636040518060400160405280601281526020017113195d1cd05cdac8139195081b5a5b9d195960721b8152508633610eb0565b50505050505050565b6104d8838383604051806020016040528060008152506107a3565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103a2565b60006001600160a01b0382166107695760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a2565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b79061183c565b61079f338383610ef7565b5050565b6107ad3383610a23565b6107c95760405162461bcd60e51b81526004016103a290611877565b6107d584848484610fc6565b50505050565b60606107e682610998565b61084c5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103a2565b600082815260066020526040812080546108659061183c565b80601f01602080910402602001604051908101604052809291908181526020018280546108919061183c565b80156108de5780601f106108b3576101008083540402835291602001916108de565b820191906000526020600020905b8154815290600101906020018083116108c157829003601f168201915b5050505050905060006108fc60408051602081019091526000815290565b905080516000141561090f575092915050565b815115610941578082604051602001610929929190611afa565b60405160208183030381529060405292505050919050565b61094a84610ff9565b949350505050565b610995816040516024016109669190611578565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526110d1565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109ea82610687565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a2e82610998565b610a8f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a2565b6000610a9a83610687565b9050806001600160a01b0316846001600160a01b03161480610ad55750836001600160a01b0316610aca8461033a565b6001600160a01b0316145b8061094a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661094a565b826001600160a01b0316610b1c82610687565b6001600160a01b031614610b805760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103a2565b6001600160a01b038216610be25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a2565b610bed6000826109b5565b6001600160a01b0383166000908152600360205260408120805460019290610c16908490611b3f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c44908490611b56565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6060815160001415610cc557505060408051602081019091526000815290565b6000604051806060016040528060408152602001611cdc6040913990506000600384516002610cf49190611b56565b610cfe9190611b84565b610d09906004611b98565b90506000610d18826020611b56565b67ffffffffffffffff811115610d3057610d30611626565b6040519080825280601f01601f191660200182016040528015610d5a576020820181803683370190505b509050818152600183018586518101602084015b81831015610dc6576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610d6e565b600389510660018114610de05760028114610df157610dfd565b613d3d60f01b600119830152610dfd565b603d60f81b6000198301525b509398975050505050505050565b61079f8282604051806020016040528060008152506110f2565b610e2e82610998565b610e915760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103a2565b600082815260066020908152604090912082516104d892840190611454565b6104d8838383604051602401610ec893929190611bb7565b60408051601f198184030181529190526020810180516001600160e01b031663e3849f7960e01b1790526110d1565b816001600160a01b0316836001600160a01b03161415610f595760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fd1848484610b09565b610fdd84848484611125565b6107d55760405162461bcd60e51b81526004016103a290611bea565b606061100482610998565b6110685760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a2565b600061107f60408051602081019091526000815290565b9050600081511161109f57604051806020016040528060008152506110ca565b806110a984611223565b6040516020016110ba929190611afa565b6040516020818303038152906040525b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6110fc8383611321565b6111096000848484611125565b6104d85760405162461bcd60e51b81526004016103a290611bea565b60006001600160a01b0384163b1561121857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611169903390899088908890600401611c3c565b6020604051808303816000875af19250505080156111a4575060408051601f3d908101601f191682019092526111a191810190611c79565b60015b6111fe573d8080156111d2576040519150601f19603f3d011682016040523d82523d6000602084013e6111d7565b606091505b5080516111f65760405162461bcd60e51b81526004016103a290611bea565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061094a565b506001949350505050565b6060816112475750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611271578061125b81611c96565b915061126a9050600a83611b84565b915061124b565b60008167ffffffffffffffff81111561128c5761128c611626565b6040519080825280601f01601f1916602001820160405280156112b6576020820181803683370190505b5090505b841561094a576112cb600183611b3f565b91506112d8600a86611cb1565b6112e3906030611b56565b60f81b8183815181106112f8576112f8611cc5565b60200101906001600160f81b031916908160001a90535061131a600a86611b84565b94506112ba565b6001600160a01b0382166113775760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103a2565b61138081610998565b156113cd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103a2565b6001600160a01b03821660009081526003602052604081208054600192906113f6908490611b56565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546114609061183c565b90600052602060002090601f01602090048101928261148257600085556114c8565b82601f1061149b57805160ff19168380011785556114c8565b828001600101855582156114c8579182015b828111156114c85782518255916020019190600101906114ad565b506114d49291506114d8565b5090565b5b808211156114d457600081556001016114d9565b6001600160e01b03198116811461099557600080fd5b60006020828403121561151557600080fd5b81356110ca816114ed565b60005b8381101561153b578181015183820152602001611523565b838111156107d55750506000910152565b60008151808452611564816020860160208601611520565b601f01601f19169290920160200192915050565b6020815260006110ca602083018461154c565b60006020828403121561159d57600080fd5b5035919050565b80356001600160a01b03811681146115bb57600080fd5b919050565b600080604083850312156115d357600080fd5b6115dc836115a4565b946020939093013593505050565b6000806000606084860312156115ff57600080fd5b611608846115a4565b9250611616602085016115a4565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561165757611657611626565b604051601f8501601f19908116603f0116810190828211818310171561167f5761167f611626565b8160405280935085815286868601111561169857600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126116c357600080fd5b6110ca8383356020850161163c565b600080604083850312156116e557600080fd5b823567ffffffffffffffff808211156116fd57600080fd5b611709868387016116b2565b9350602085013591508082111561171f57600080fd5b5061172c858286016116b2565b9150509250929050565b60006020828403121561174857600080fd5b6110ca826115a4565b6000806040838503121561176457600080fd5b61176d836115a4565b91506020830135801515811461178257600080fd5b809150509250929050565b600080600080608085870312156117a357600080fd5b6117ac856115a4565b93506117ba602086016115a4565b925060408501359150606085013567ffffffffffffffff8111156117dd57600080fd5b8501601f810187136117ee57600080fd5b6117fd8782356020840161163c565b91505092959194509250565b6000806040838503121561181c57600080fd5b611825836115a4565b9150611833602084016115a4565b90509250929050565b600181811c9082168061185057607f821691505b6020821081141561187157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600081516118da818560208601611520565b9290920192915050565b600080845481600182811c91508083168061190057607f831692505b602080841082141561192057634e487b7160e01b86526022600452602486fd5b818015611934576001811461194557611972565b60ff19861689528489019650611972565b60008b81526020902060005b8681101561196a5781548b820152908501908301611951565b505084890196505b50505050505061199e61198582866118c8565b6c1e17ba32bc3a1f1e17b9bb339f60991b8152600d0190565b95945050505050565b6a028bab2b9ba34b7b71011960ad1b815282600b820152600160fd1b602b820152600082516119dd81602c850160208701611520565b91909101602c019392505050565b693d913730b6b2911d101160b11b81528251600090611a1181600a850160208801611520565b7f222c20226465736372697074696f6e223a20224c6574732041736b202d205175600a918401918201527f657374696f6e20746865207374617475732051756f222c2022696d616765223a602a8201527f2022646174613a696d6167652f7376672b786d6c3b6261736536342c00000000604a8201528351611a9a816066840160208801611520565b61227d60f01b60669290910191820152606801949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251611aed81601d850160208701611520565b91909101601d0192915050565b60008351611b0c818460208801611520565b835190830190611b20818360208801611520565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611b5157611b51611b29565b500390565b60008219821115611b6957611b69611b29565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611b9357611b93611b6e565b500490565b6000816000190483118215151615611bb257611bb2611b29565b500290565b606081526000611bca606083018661154c565b6020830194909452506001600160a01b0391909116604090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c6f9083018461154c565b9695505050505050565b600060208284031215611c8b57600080fd5b81516110ca816114ed565b6000600019821415611caa57611caa611b29565b5060010190565b600082611cc057611cc0611b6e565b500690565b634e487b7160e01b600052603260045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212209a70fab9b2c2016578c161eacb4f533f574459d80a3aeb70c92efda454374aa664736f6c634300080b00333c73766720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f323030302f73766727207072657365727665417370656374526174696f3d27784d696e594d696e206d656574272076696577426f783d273020302033353020333530273e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20323470783b207d3c2f7374796c653e3c726563742077696474683d273130302527206865696768743d2731303025272066696c6c3d27626c61636b27202f3e3c7465787420783d273530252720793d273530252720636c6173733d27626173652720646f6d696e616e742d626173656c696e653d276d6964646c652720746578742d616e63686f723d276d6964646c65273e",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c5780632862b1471461017f57806342842e0e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004611503565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e9190611578565b61013f61013a36600461158b565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a6101653660046115c0565b6103c7565b005b61016a61017a3660046115ea565b6104dd565b61016a61018d3660046116d2565b61050e565b61016a6101a03660046115ea565b61066c565b61013f6101b336600461158b565b610687565b6101cb6101c6366004611736565b6106fe565b60405190815260200161010e565b61011f610785565b61016a6101ef366004611751565b610794565b61016a61020236600461178d565b6107a3565b61011f61021536600461158b565b6107db565b610102610228366004611809565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b79061183c565b80601f01602080910402602001604051908101604052809291908181526020018280546102e39061183c565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b600061034582610998565b6103ab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103d282610687565b9050806001600160a01b0316836001600160a01b031614156104405760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a2565b336001600160a01b038216148061045c575061045c8133610228565b6104ce5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a2565b6104d883836109b5565b505050565b6104e73382610a23565b6105035760405162461bcd60e51b81526004016103a290611877565b6104d8838383610b09565b60008151116105585760405162461bcd60e51b8152602060048201526016602482015275115b5c1d1e481c5d595cdd1a5bdb881d1bc81b5a5b9d60521b60448201526064016103a2565b600061056360075490565b9050600060088360405160200161057b9291906118e4565b6040516020818303038152906040529050600082856040516020016105a19291906119a7565b604051602081830303815290604052905060006105e6826105c185610ca5565b6040516020016105d29291906119eb565b604051602081830303815290604052610ca5565b90506000816040516020016105fb9190611ab5565b60405160208183030381529060405290506106163386610e0b565b6106208582610e25565b61062e600780546001019055565b6106636040518060400160405280601281526020017113195d1cd05cdac8139195081b5a5b9d195960721b8152508633610eb0565b50505050505050565b6104d8838383604051806020016040528060008152506107a3565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103a2565b60006001600160a01b0382166107695760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a2565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b79061183c565b61079f338383610ef7565b5050565b6107ad3383610a23565b6107c95760405162461bcd60e51b81526004016103a290611877565b6107d584848484610fc6565b50505050565b60606107e682610998565b61084c5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103a2565b600082815260066020526040812080546108659061183c565b80601f01602080910402602001604051908101604052809291908181526020018280546108919061183c565b80156108de5780601f106108b3576101008083540402835291602001916108de565b820191906000526020600020905b8154815290600101906020018083116108c157829003601f168201915b5050505050905060006108fc60408051602081019091526000815290565b905080516000141561090f575092915050565b815115610941578082604051602001610929929190611afa565b60405160208183030381529060405292505050919050565b61094a84610ff9565b949350505050565b610995816040516024016109669190611578565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526110d1565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109ea82610687565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a2e82610998565b610a8f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a2565b6000610a9a83610687565b9050806001600160a01b0316846001600160a01b03161480610ad55750836001600160a01b0316610aca8461033a565b6001600160a01b0316145b8061094a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661094a565b826001600160a01b0316610b1c82610687565b6001600160a01b031614610b805760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103a2565b6001600160a01b038216610be25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a2565b610bed6000826109b5565b6001600160a01b0383166000908152600360205260408120805460019290610c16908490611b3f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c44908490611b56565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6060815160001415610cc557505060408051602081019091526000815290565b6000604051806060016040528060408152602001611cdc6040913990506000600384516002610cf49190611b56565b610cfe9190611b84565b610d09906004611b98565b90506000610d18826020611b56565b67ffffffffffffffff811115610d3057610d30611626565b6040519080825280601f01601f191660200182016040528015610d5a576020820181803683370190505b509050818152600183018586518101602084015b81831015610dc6576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610d6e565b600389510660018114610de05760028114610df157610dfd565b613d3d60f01b600119830152610dfd565b603d60f81b6000198301525b509398975050505050505050565b61079f8282604051806020016040528060008152506110f2565b610e2e82610998565b610e915760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103a2565b600082815260066020908152604090912082516104d892840190611454565b6104d8838383604051602401610ec893929190611bb7565b60408051601f198184030181529190526020810180516001600160e01b031663e3849f7960e01b1790526110d1565b816001600160a01b0316836001600160a01b03161415610f595760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fd1848484610b09565b610fdd84848484611125565b6107d55760405162461bcd60e51b81526004016103a290611bea565b606061100482610998565b6110685760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a2565b600061107f60408051602081019091526000815290565b9050600081511161109f57604051806020016040528060008152506110ca565b806110a984611223565b6040516020016110ba929190611afa565b6040516020818303038152906040525b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6110fc8383611321565b6111096000848484611125565b6104d85760405162461bcd60e51b81526004016103a290611bea565b60006001600160a01b0384163b1561121857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611169903390899088908890600401611c3c565b6020604051808303816000875af19250505080156111a4575060408051601f3d908101601f191682019092526111a191810190611c79565b60015b6111fe573d8080156111d2576040519150601f19603f3d011682016040523d82523d6000602084013e6111d7565b606091505b5080516111f65760405162461bcd60e51b81526004016103a290611bea565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061094a565b506001949350505050565b6060816112475750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611271578061125b81611c96565b915061126a9050600a83611b84565b915061124b565b60008167ffffffffffffffff81111561128c5761128c611626565b6040519080825280601f01601f1916602001820160405280156112b6576020820181803683370190505b5090505b841561094a576112cb600183611b3f565b91506112d8600a86611cb1565b6112e3906030611b56565b60f81b8183815181106112f8576112f8611cc5565b60200101906001600160f81b031916908160001a90535061131a600a86611b84565b94506112ba565b6001600160a01b0382166113775760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103a2565b61138081610998565b156113cd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103a2565b6001600160a01b03821660009081526003602052604081208054600192906113f6908490611b56565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546114609061183c565b90600052602060002090601f01602090048101928261148257600085556114c8565b82601f1061149b57805160ff19168380011785556114c8565b828001600101855582156114c8579182015b828111156114c85782518255916020019190600101906114ad565b506114d49291506114d8565b5090565b5b808211156114d457600081556001016114d9565b6001600160e01b03198116811461099557600080fd5b60006020828403121561151557600080fd5b81356110ca816114ed565b60005b8381101561153b578181015183820152602001611523565b838111156107d55750506000910152565b60008151808452611564816020860160208601611520565b601f01601f19169290920160200192915050565b6020815260006110ca602083018461154c565b60006020828403121561159d57600080fd5b5035919050565b80356001600160a01b03811681146115bb57600080fd5b919050565b600080604083850312156115d357600080fd5b6115dc836115a4565b946020939093013593505050565b6000806000606084860312156115ff57600080fd5b611608846115a4565b9250611616602085016115a4565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561165757611657611626565b604051601f8501601f19908116603f0116810190828211818310171561167f5761167f611626565b8160405280935085815286868601111561169857600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126116c357600080fd5b6110ca8383356020850161163c565b600080604083850312156116e557600080fd5b823567ffffffffffffffff808211156116fd57600080fd5b611709868387016116b2565b9350602085013591508082111561171f57600080fd5b5061172c858286016116b2565b9150509250929050565b60006020828403121561174857600080fd5b6110ca826115a4565b6000806040838503121561176457600080fd5b61176d836115a4565b91506020830135801515811461178257600080fd5b809150509250929050565b600080600080608085870312156117a357600080fd5b6117ac856115a4565b93506117ba602086016115a4565b925060408501359150606085013567ffffffffffffffff8111156117dd57600080fd5b8501601f810187136117ee57600080fd5b6117fd8782356020840161163c565b91505092959194509250565b6000806040838503121561181c57600080fd5b611825836115a4565b9150611833602084016115a4565b90509250929050565b600181811c9082168061185057607f821691505b6020821081141561187157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600081516118da818560208601611520565b9290920192915050565b600080845481600182811c91508083168061190057607f831692505b602080841082141561192057634e487b7160e01b86526022600452602486fd5b818015611934576001811461194557611972565b60ff19861689528489019650611972565b60008b81526020902060005b8681101561196a5781548b820152908501908301611951565b505084890196505b50505050505061199e61198582866118c8565b6c1e17ba32bc3a1f1e17b9bb339f60991b8152600d0190565b95945050505050565b6a028bab2b9ba34b7b71011960ad1b815282600b820152600160fd1b602b820152600082516119dd81602c850160208701611520565b91909101602c019392505050565b693d913730b6b2911d101160b11b81528251600090611a1181600a850160208801611520565b7f222c20226465736372697074696f6e223a20224c6574732041736b202d205175600a918401918201527f657374696f6e20746865207374617475732051756f222c2022696d616765223a602a8201527f2022646174613a696d6167652f7376672b786d6c3b6261736536342c00000000604a8201528351611a9a816066840160208801611520565b61227d60f01b60669290910191820152606801949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251611aed81601d850160208701611520565b91909101601d0192915050565b60008351611b0c818460208801611520565b835190830190611b20818360208801611520565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611b5157611b51611b29565b500390565b60008219821115611b6957611b69611b29565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611b9357611b93611b6e565b500490565b6000816000190483118215151615611bb257611bb2611b29565b500290565b606081526000611bca606083018661154c565b6020830194909452506001600160a01b0391909116604090910152919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c6f9083018461154c565b9695505050505050565b600060208284031215611c8b57600080fd5b81516110ca816114ed565b6000600019821415611caa57611caa611b29565b5060010190565b600082611cc057611cc0611b6e565b500690565b634e487b7160e01b600052603260045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212209a70fab9b2c2016578c161eacb4f533f574459d80a3aeb70c92efda454374aa664736f6c634300080b0033",
    "sourceMap": "776:330:0:-:0;640:1789;776:330;;640:1789;776:330;;;640:1789;776:330;;;;;;;;;;;;;;;:::i;:::-;;1113:100;;;;;;;;;-1:-1:-1;1390:113:1;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:1;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;1161:45:0::1;;;;;;;;;;;;;;;;;::::0;:11:::1;;;;;:45;;:::i;:::-;640:1789:::0;;5054:112:13;5103:59;5158:2;5119:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5119:42:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5119:42:13;;;-1:-1:-1;;;5119:42:13;;;;5103:15;:59;:::i;:::-;5054:112;:::o;176:288::-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;640:1789:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:1789:0;;;-1:-1:-1;640:1789:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:597:14;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:14;574:15;-1:-1:-1;;570:29:14;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:14:o;616:380::-;695:1;691:12;;;;738;;;759:61;;813:4;805:6;801:17;791:27;;759:61;866:2;858:6;855:14;835:18;832:38;829:161;;;912:10;907:3;903:20;900:1;893:31;947:4;944:1;937:15;975:4;972:1;965:15;829:161;;616:380;;;:::o;:::-;640:1789:0;;;;;;",
    "deployedSourceMap": "640:1789:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1714:32:14;;;1696:51;;1684:2;1669:18;3999:217:1;1550:203:14;3537:401:1;;;;;;:::i;:::-;;:::i;:::-;;4726:330;;;;;;:::i;:::-;;:::i;1219:1208:0:-;;;;;;:::i;:::-;;:::i;5122:179:1:-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;4409:25:14;;;4397:2;4382:18;1929:205:1;4263:177:14;2650:102:1;;;:::i;4283:153::-;;;;;;:::i;:::-;;:::i;5367:320::-;;;;;;:::i;:::-;;:::i;467:663:4:-;;;;;;:::i;:::-;;:::i;4502:162:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:1;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:10;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;4102:16;4110:7;4102;:16::i;:::-;4094:73;;;;-1:-1:-1;;;4094:73:1;;6321:2:14;4094:73:1;;;6303:21:14;6360:2;6340:18;;;6333:30;6399:34;6379:18;;;6372:62;-1:-1:-1;;;6450:18:14;;;6443:42;6502:19;;4094:73:1;;;;;;;;;-1:-1:-1;4185:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:1;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:1;:2;-1:-1:-1;;;;;3674:11:1;;;3666:57;;;;-1:-1:-1;;;3666:57:1;;6734:2:14;3666:57:1;;;6716:21:14;6773:2;6753:18;;;6746:30;6812:34;6792:18;;;6785:62;-1:-1:-1;;;6863:18:14;;;6856:31;6904:19;;3666:57:1;6532:397:14;3666:57:1;719:10:7;-1:-1:-1;;;;;3755:21:1;;;;:62;;-1:-1:-1;3780:37:1;3797:5;719:10:7;4502:162:1;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:1;;7136:2:14;3734:165:1;;;7118:21:14;7175:2;7155:18;;;7148:30;7214:34;7194:18;;;7187:62;7285:26;7265:18;;;7258:54;7329:19;;3734:165:1;6934:420:14;3734:165:1;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;4726:330::-;4915:41;719:10:7;4948:7:1;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:1;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;1219:1208:0:-;1327:1;1312:4;1306:18;:22;1298:57;;;;-1:-1:-1;;;1298:57:0;;7979:2:14;1298:57:0;;;7961:21:14;8018:2;7998:18;;;7991:30;-1:-1:-1;;;8037:18:14;;;8030:52;8099:18;;1298:57:0;7777:346:14;1298:57:0;1365:17;1385:19;:9;918:14:8;;827:112;1385:19:0;1365:39;;1414:22;1476:7;1485:4;1459:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1414:103;;1528:24;1607:9;1623:2;1575:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1528:108;;1647:18;1668:438;1826:10;1982:30;2002:8;1982:13;:30::i;:::-;1746:318;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1668:13;:438::i;:::-;1647:459;;2117:27;2217:4;2167:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;2117:115;;2243:32;2253:10;2265:9;2243;:32::i;:::-;2285:38;2298:9;2309:13;2285:12;:38::i;:::-;2333:21;:9;1032:19:8;;1050:1;1032:19;;;945:123;2333:21:0;2364:56;;;;;;;;;;;;;;-1:-1:-1;;;2364:56:0;;;2398:9;2409:10;2364:11;:56::i;:::-;1288:1139;;;;;1219:1208;;:::o;5122:179:1:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:1;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:1;;12381:2:14;2324:73:1;;;12363:21:14;12420:2;12400:18;;;12393:30;12459:34;12439:18;;;12432:62;-1:-1:-1;;;12510:18:14;;;12503:39;12559:19;;2324:73:1;12179:405:14;1929:205:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:74;;;;-1:-1:-1;;;2020:74:1;;12791:2:14;2020:74:1;;;12773:21:14;12830:2;12810:18;;;12803:30;12869:34;12849:18;;;12842:62;-1:-1:-1;;;12920:18:14;;;12913:40;12970:19;;2020:74:1;12589:406:14;2020:74:1;-1:-1:-1;;;;;;2111:16:1;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:7;4410:8:1;4420;4377:18;:52::i;:::-;4283:153;;:::o;5367:320::-;5536:41;719:10:7;5569:7:1;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:1;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;467:663:4:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:4;;13202:2:14;565:78:4;;;13184:21:14;13241:2;13221:18;;;13214:30;13280:34;13260:18;;;13253:62;-1:-1:-1;;;13331:18:14;;;13324:47;13388:19;;565:78:4;13000:413:14;565:78:4;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3464:9:1;;;;;;;;;-1:-1:-1;3464:9:1;;;3388:92;730:10:4;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:4;467:663;-1:-1:-1;;467:663:4:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;:::-;1093:30;467:663;-1:-1:-1;;;;467:663:4:o;5054:112:13:-;5103:59;5158:2;5119:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5119:42:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5119:42:13;-1:-1:-1;;;5119:42:13;;;5103:15;:59::i;:::-;5054:112;:::o;7159:125:1:-;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:1;:30;;;7159:125::o;11168:171::-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:1;-1:-1:-1;;;;;11242:29:1;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:1;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7559:16;7567:7;7559;:16::i;:::-;7551:73;;;;-1:-1:-1;;;7551:73:1;;14095:2:14;7551:73:1;;;14077:21:14;14134:2;14114:18;;;14107:30;14173:34;14153:18;;;14146:62;-1:-1:-1;;;14224:18:14;;;14217:42;14276:19;;7551:73:1;13893:408:14;7551:73:1;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:1;:7;-1:-1:-1;;;;;7691:16:1;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:1;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:1;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:1;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;4502:162;10452:605;10606:4;-1:-1:-1;;;;;10579:31:1;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:1;;10571:81;;;;-1:-1:-1;;;10571:81:1;;14508:2:14;10571:81:1;;;14490:21:14;14547:2;14527:18;;;14520:30;14586:34;14566:18;;;14559:62;-1:-1:-1;;;14637:18:14;;;14630:35;14682:19;;10571:81:1;14306:401:14;10571:81:1;-1:-1:-1;;;;;10670:16:1;;10662:65;;;;-1:-1:-1;;;10662:65:1;;14914:2:14;10662:65:1;;;14896:21:14;14953:2;14933:18;;;14926:30;14992:34;14972:18;;;14965:62;-1:-1:-1;;;15043:18:14;;;15036:34;15087:19;;10662:65:1;14712:400:14;10662:65:1;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:1;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:1;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:1;-1:-1:-1;;;;;10937:21:1;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;777:1861:12:-;835:13;864:4;:11;879:1;864:16;860:31;;;-1:-1:-1;;882:9:12;;;;;;;;;-1:-1:-1;882:9:12;;;777:1861::o;860:31::-;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1050:4;:11;1064:1;1050:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:27;;:1;:27;:::i;:::-;1023:48;-1:-1:-1;1151:20:12;1185:15;1023:48;1198:2;1185:15;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1174:27:12;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;-1:-1:-1;2378:1:12;2363:17;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;-1:-1:-1;;;;;2495:17:12;;2488:43;2479:54;;2546:52;-1:-1:-1;;;;;2562:17:12;;2555:41;2440:158;-1:-1:-1;2625:6:12;;777:1861;-1:-1:-1;;;;;;;;777:1861:12:o;8116:108:1:-;8191:26;8201:2;8205:7;8191:26;;;;;;;;;;;;:9;:26::i;1277:214:4:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:4;;16144:2:14;1368:75:4;;;16126:21:14;16183:2;16163:18;;;16156:30;16222:34;16202:18;;;16195:62;-1:-1:-1;;;16273:18:14;;;16266:44;16327:19;;1368:75:4;15942:410:14;1368:75:4;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;10311:154:13:-;10381:80;10449:2;10453;10457;10397:63;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10397:63:13;;;;;;;;;;;;;;-1:-1:-1;;;;;10397:63:13;-1:-1:-1;;;10397:63:13;;;10381:15;:80::i;11474:307:1:-;11624:8;-1:-1:-1;;;;;11615:17:1;:5;-1:-1:-1;;;;;11615:17:1;;;11607:55;;;;-1:-1:-1;;;11607:55:1;;16963:2:14;11607:55:1;;;16945:21:14;17002:2;16982:18;;;16975:30;17041:27;17021:18;;;17014:55;17086:18;;11607:55:1;16761:349:14;11607:55:1;-1:-1:-1;;;;;11672:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:1;;;;;;;;;;11733:41;;540::14;;;11733::1;;513:18:14;11733:41:1;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:1;;;;;;;:::i;2818:329::-;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:1;;17736:2:14;2916:76:1;;;17718:21:14;17775:2;17755:18;;;17748:30;17814:34;17794:18;;;17787:62;-1:-1:-1;;;17865:18:14;;;17858:45;17920:19;;2916:76:1;17534:411:14;2916:76:1;3003:21;3027:10;3464:9;;;;;;;;;-1:-1:-1;3464:9:1;;;3388:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:1:o;176:288:13:-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;8445:311:1:-;8570:18;8576:2;8580:7;8570:5;:18::i;:::-;8619:54;8650:1;8654:2;8658:7;8667:5;8619:22;:54::i;:::-;8598:151;;;;-1:-1:-1;;;8598:151:1;;;;;;;:::i;12334:778::-;12484:4;-1:-1:-1;;;;;12504:13:1;;1465:19:6;:23;12500:606:1;;12539:72;;-1:-1:-1;;;12539:72:1;;-1:-1:-1;;;;;12539:36:1;;;;;:72;;719:10:7;;12590:4:1;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:1;;;;;;;;-1:-1:-1;;12539:72:1;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:1;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:1;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:1;-1:-1:-1;;;12661:51:1;;-1:-1:-1;12654:58:1;;12500:606;-1:-1:-1;13091:4:1;12334:778;;;;;;:::o;328:703:9:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:9;;;;;;;;;;;;-1:-1:-1;;;627:10:9;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:9;;-1:-1:-1;773:2:9;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:9;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:9;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:9;;;;;;;;-1:-1:-1;972:11:9;981:2;972:11;;:::i;:::-;;;844:150;;9078:427:1;-1:-1:-1;;;;;9157:16:1;;9149:61;;;;-1:-1:-1;;;9149:61:1;;19300:2:14;9149:61:1;;;19282:21:14;;;19319:18;;;19312:30;19378:34;19358:18;;;19351:62;19430:18;;9149:61:1;19098:356:14;9149:61:1;9229:16;9237:7;9229;:16::i;:::-;9228:17;9220:58;;;;-1:-1:-1;;;9220:58:1;;19661:2:14;9220:58:1;;;19643:21:14;19700:2;19680:18;;;19673:30;19739;19719:18;;;19712:58;19787:18;;9220:58:1;19459:352:14;9220:58:1;-1:-1:-1;;;;;9345:13:1;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:1;-1:-1:-1;;;;;9373:21:1;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;4283:153;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:14;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:14;822:16;;815:27;592:258::o;855:269::-;908:3;946:5;940:12;973:6;968:3;961:19;989:63;1045:6;1038:4;1033:3;1029:14;1022:4;1015:5;1011:16;989:63;:::i;:::-;1106:2;1085:15;-1:-1:-1;;1081:29:14;1072:39;;;;1113:4;1068:50;;855:269;-1:-1:-1;;855:269:14:o;1129:231::-;1278:2;1267:9;1260:21;1241:4;1298:56;1350:2;1339:9;1335:18;1327:6;1298:56;:::i;1365:180::-;1424:6;1477:2;1465:9;1456:7;1452:23;1448:32;1445:52;;;1493:1;1490;1483:12;1445:52;-1:-1:-1;1516:23:14;;1365:180;-1:-1:-1;1365:180:14:o;1758:173::-;1826:20;;-1:-1:-1;;;;;1875:31:14;;1865:42;;1855:70;;1921:1;1918;1911:12;1855:70;1758:173;;;:::o;1936:254::-;2004:6;2012;2065:2;2053:9;2044:7;2040:23;2036:32;2033:52;;;2081:1;2078;2071:12;2033:52;2104:29;2123:9;2104:29;:::i;:::-;2094:39;2180:2;2165:18;;;;2152:32;;-1:-1:-1;;;1936:254:14:o;2195:328::-;2272:6;2280;2288;2341:2;2329:9;2320:7;2316:23;2312:32;2309:52;;;2357:1;2354;2347:12;2309:52;2380:29;2399:9;2380:29;:::i;:::-;2370:39;;2428:38;2462:2;2451:9;2447:18;2428:38;:::i;:::-;2418:48;;2513:2;2502:9;2498:18;2485:32;2475:42;;2195:328;;;;;:::o;2528:127::-;2589:10;2584:3;2580:20;2577:1;2570:31;2620:4;2617:1;2610:15;2644:4;2641:1;2634:15;2660:632;2725:5;2755:18;2796:2;2788:6;2785:14;2782:40;;;2802:18;;:::i;:::-;2877:2;2871:9;2845:2;2931:15;;-1:-1:-1;;2927:24:14;;;2953:2;2923:33;2919:42;2907:55;;;2977:18;;;2997:22;;;2974:46;2971:72;;;3023:18;;:::i;:::-;3063:10;3059:2;3052:22;3092:6;3083:15;;3122:6;3114;3107:22;3162:3;3153:6;3148:3;3144:16;3141:25;3138:45;;;3179:1;3176;3169:12;3138:45;3229:6;3224:3;3217:4;3209:6;3205:17;3192:44;3284:1;3277:4;3268:6;3260;3256:19;3252:30;3245:41;;;;2660:632;;;;;:::o;3297:222::-;3340:5;3393:3;3386:4;3378:6;3374:17;3370:27;3360:55;;3411:1;3408;3401:12;3360:55;3433:80;3509:3;3500:6;3487:20;3480:4;3472:6;3468:17;3433:80;:::i;3524:543::-;3612:6;3620;3673:2;3661:9;3652:7;3648:23;3644:32;3641:52;;;3689:1;3686;3679:12;3641:52;3729:9;3716:23;3758:18;3799:2;3791:6;3788:14;3785:34;;;3815:1;3812;3805:12;3785:34;3838:50;3880:7;3871:6;3860:9;3856:22;3838:50;:::i;:::-;3828:60;;3941:2;3930:9;3926:18;3913:32;3897:48;;3970:2;3960:8;3957:16;3954:36;;;3986:1;3983;3976:12;3954:36;;4009:52;4053:7;4042:8;4031:9;4027:24;4009:52;:::i;:::-;3999:62;;;3524:543;;;;;:::o;4072:186::-;4131:6;4184:2;4172:9;4163:7;4159:23;4155:32;4152:52;;;4200:1;4197;4190:12;4152:52;4223:29;4242:9;4223:29;:::i;4445:347::-;4510:6;4518;4571:2;4559:9;4550:7;4546:23;4542:32;4539:52;;;4587:1;4584;4577:12;4539:52;4610:29;4629:9;4610:29;:::i;:::-;4600:39;;4689:2;4678:9;4674:18;4661:32;4736:5;4729:13;4722:21;4715:5;4712:32;4702:60;;4758:1;4755;4748:12;4702:60;4781:5;4771:15;;;4445:347;;;;;:::o;4797:667::-;4892:6;4900;4908;4916;4969:3;4957:9;4948:7;4944:23;4940:33;4937:53;;;4986:1;4983;4976:12;4937:53;5009:29;5028:9;5009:29;:::i;:::-;4999:39;;5057:38;5091:2;5080:9;5076:18;5057:38;:::i;:::-;5047:48;;5142:2;5131:9;5127:18;5114:32;5104:42;;5197:2;5186:9;5182:18;5169:32;5224:18;5216:6;5213:30;5210:50;;;5256:1;5253;5246:12;5210:50;5279:22;;5332:4;5324:13;;5320:27;-1:-1:-1;5310:55:14;;5361:1;5358;5351:12;5310:55;5384:74;5450:7;5445:2;5432:16;5427:2;5423;5419:11;5384:74;:::i;:::-;5374:84;;;4797:667;;;;;;;:::o;5469:260::-;5537:6;5545;5598:2;5586:9;5577:7;5573:23;5569:32;5566:52;;;5614:1;5611;5604:12;5566:52;5637:29;5656:9;5637:29;:::i;:::-;5627:39;;5685:38;5719:2;5708:9;5704:18;5685:38;:::i;:::-;5675:48;;5469:260;;;;;:::o;5734:380::-;5813:1;5809:12;;;;5856;;;5877:61;;5931:4;5923:6;5919:17;5909:27;;5877:61;5984:2;5976:6;5973:14;5953:18;5950:38;5947:161;;;6030:10;6025:3;6021:20;6018:1;6011:31;6065:4;6062:1;6055:15;6093:4;6090:1;6083:15;5947:161;;5734:380;;;:::o;7359:413::-;7561:2;7543:21;;;7600:2;7580:18;;;7573:30;7639:34;7634:2;7619:18;;7612:62;-1:-1:-1;;;7705:2:14;7690:18;;7683:47;7762:3;7747:19;;7359:413::o;8254:185::-;8296:3;8334:5;8328:12;8349:52;8394:6;8389:3;8382:4;8375:5;8371:16;8349:52;:::i;:::-;8417:16;;;;;8254:185;-1:-1:-1;;8254:185:14:o;8576:1306::-;8853:3;8882:1;8915:6;8909:13;8945:3;8967:1;8995:9;8991:2;8987:18;8977:28;;9055:2;9044:9;9040:18;9077;9067:61;;9121:4;9113:6;9109:17;9099:27;;9067:61;9147:2;9195;9187:6;9184:14;9164:18;9161:38;9158:165;;;-1:-1:-1;;;9222:33:14;;9278:4;9275:1;9268:15;9308:4;9229:3;9296:17;9158:165;9339:18;9366:104;;;;9484:1;9479:320;;;;9332:467;;9366:104;-1:-1:-1;;9399:24:14;;9387:37;;9444:16;;;;-1:-1:-1;9366:104:14;;9479:320;8201:1;8194:14;;;8238:4;8225:18;;9574:1;9588:165;9602:6;9599:1;9596:13;9588:165;;;9680:14;;9667:11;;;9660:35;9723:16;;;;9617:10;;9588:165;;;9592:3;;9782:6;9777:3;9773:16;9766:23;;9332:467;;;;;;;9815:61;9845:30;9871:3;9863:6;9845:30;:::i;:::-;-1:-1:-1;;;8509:28:14;;8562:2;8553:12;;8444:127;9815:61;9808:68;8576:1306;-1:-1:-1;;;;;8576:1306:14:o;9887:628::-;-1:-1:-1;;;10273:3:14;10266:26;10322:6;10317:2;10312:3;10308:12;10301:28;-1:-1:-1;;;10354:2:14;10349:3;10345:12;10338:25;10248:3;10392:6;10386:13;10408:60;10461:6;10456:2;10451:3;10447:12;10442:2;10434:6;10430:15;10408:60;:::i;:::-;10488:16;;;;10506:2;10484:25;;9887:628;-1:-1:-1;;;9887:628:14:o;10520:1201::-;-1:-1:-1;;;11020:45:14;;11088:13;;11002:3;;11110:62;11088:13;11160:2;11151:12;;11144:4;11132:17;;11110:62;:::i;:::-;11236:66;11231:2;11191:16;;;11223:11;;;11216:87;11332:66;11327:2;11319:11;;11312:87;11428:66;11423:2;11415:11;;11408:87;11520:13;;11542:64;11520:13;11591:3;11583:12;;11576:4;11564:17;;11542:64;:::i;:::-;-1:-1:-1;;;11666:3:14;11625:17;;;;11658:12;;;11651:36;11711:3;11703:12;;10520:1201;-1:-1:-1;;;;10520:1201:14:o;11726:448::-;11988:31;11983:3;11976:44;11958:3;12049:6;12043:13;12065:62;12120:6;12115:2;12110:3;12106:12;12099:4;12091:6;12087:17;12065:62;:::i;:::-;12147:16;;;;12165:2;12143:25;;11726:448;-1:-1:-1;;11726:448:14:o;13418:470::-;13597:3;13635:6;13629:13;13651:53;13697:6;13692:3;13685:4;13677:6;13673:17;13651:53;:::i;:::-;13767:13;;13726:16;;;;13789:57;13767:13;13726:16;13823:4;13811:17;;13789:57;:::i;:::-;13862:20;;13418:470;-1:-1:-1;;;;13418:470:14:o;15117:127::-;15178:10;15173:3;15169:20;15166:1;15159:31;15209:4;15206:1;15199:15;15233:4;15230:1;15223:15;15249:125;15289:4;15317:1;15314;15311:8;15308:34;;;15322:18;;:::i;:::-;-1:-1:-1;15359:9:14;;15249:125::o;15379:128::-;15419:3;15450:1;15446:6;15443:1;15440:13;15437:39;;;15456:18;;:::i;:::-;-1:-1:-1;15492:9:14;;15379:128::o;15512:127::-;15573:10;15568:3;15564:20;15561:1;15554:31;15604:4;15601:1;15594:15;15628:4;15625:1;15618:15;15644:120;15684:1;15710;15700:35;;15715:18;;:::i;:::-;-1:-1:-1;15749:9:14;;15644:120::o;15769:168::-;15809:7;15875:1;15871;15867:6;15863:14;15860:1;15857:21;15852:1;15845:9;15838:17;15834:45;15831:71;;;15882:18;;:::i;:::-;-1:-1:-1;15922:9:14;;15769:168::o;16357:399::-;16562:2;16551:9;16544:21;16525:4;16582:56;16634:2;16623:9;16619:18;16611:6;16582:56;:::i;:::-;16669:2;16654:18;;16647:34;;;;-1:-1:-1;;;;;;16717:32:14;;;;16712:2;16697:18;;;16690:60;16574:64;16357:399;-1:-1:-1;16357:399:14:o;17115:414::-;17317:2;17299:21;;;17356:2;17336:18;;;17329:30;17395:34;17390:2;17375:18;;17368:62;-1:-1:-1;;;17461:2:14;17446:18;;17439:48;17519:3;17504:19;;17115:414::o;17950:500::-;-1:-1:-1;;;;;18219:15:14;;;18201:34;;18271:15;;18266:2;18251:18;;18244:43;18318:2;18303:18;;18296:34;;;18366:3;18361:2;18346:18;;18339:31;;;18144:4;;18387:57;;18424:19;;18416:6;18387:57;:::i;:::-;18379:65;17950:500;-1:-1:-1;;;;;;17950:500:14:o;18455:249::-;18524:6;18577:2;18565:9;18556:7;18552:23;18548:32;18545:52;;;18593:1;18590;18583:12;18545:52;18625:9;18619:16;18644:30;18668:5;18644:30;:::i;18709:135::-;18748:3;-1:-1:-1;;18769:17:14;;18766:43;;;18789:18;;:::i;:::-;-1:-1:-1;18836:1:14;18825:13;;18709:135::o;18849:112::-;18881:1;18907;18897:35;;18912:18;;:::i;:::-;-1:-1:-1;18946:9:14;;18849:112::o;18966:127::-;19027:10;19022:3;19018:20;19015:1;19008:31;19058:4;19055:1;19048:15;19082:4;19079:1;19072:15",
    "sourcePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/contracts/LetsAskNftContract.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/contracts/LetsAskNftContract.sol",
        "exportedSymbols": {
            "Address": [
                1595
            ],
            "Base64": [
                2045
            ],
            "Context": [
                1617
            ],
            "Counters": [
                1691
            ],
            "ERC165": [
                1918
            ],
            "ERC721": [
                1011
            ],
            "ERC721URIStorage": [
                1273
            ],
            "IERC165": [
                1930
            ],
            "IERC721": [
                1127
            ],
            "IERC721Metadata": [
                1300
            ],
            "IERC721Receiver": [
                1145
            ],
            "LetsAskNftContract": [
                145
            ],
            "Strings": [
                1894
            ],
            "console": [
                10109
            ]
        },
        "id": 146,
        "license": "Unlicense",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "37:23:0"
            },
            {
                "absolutePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Strings.sol",
                "file": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Strings.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 146,
                "sourceUnit": 1895,
                "src": "62:117:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "file": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 146,
                "sourceUnit": 1274,
                "src": "180:144:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "file": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 146,
                "sourceUnit": 1692,
                "src": "325:118:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/hardhat/console.sol",
                "file": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/hardhat/console.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 146,
                "sourceUnit": 10110,
                "src": "444:95:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/base64-sol/base64.sol",
                "file": "/Users/vigneshwaran/apps/blockchain/letsask/contract/node_modules/base64-sol/base64.sol",
                "id": 6,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 146,
                "sourceUnit": 2046,
                "src": "541:97:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC721URIStorage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1273,
                            "src": "671:16:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "671:16:0"
                    }
                ],
                "canonicalName": "LetsAskNftContract",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 145,
                "linearizedBaseContracts": [
                    145,
                    1273,
                    1011,
                    1300,
                    1127,
                    1918,
                    1930,
                    1617
                ],
                "name": "LetsAskNftContract",
                "nameLocation": "649:18:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 12,
                        "libraryName": {
                            "id": 9,
                            "name": "Counters",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1691,
                            "src": "700:8:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "694:36:0",
                        "typeName": {
                            "id": 11,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 10,
                                "name": "Counters.Counter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1623,
                                "src": "713:16:0"
                            },
                            "referencedDeclaration": 1623,
                            "src": "713:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1623_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "_tokenIds",
                        "nameLocation": "760:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "735:34:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1623_storage",
                            "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                            "id": 14,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 13,
                                "name": "Counters.Counter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1623,
                                "src": "735:16:0"
                            },
                            "referencedDeclaration": 1623,
                            "src": "735:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1623_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "baseSvg",
                        "nameLocation": "783:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "776:330:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 16,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "776:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": {
                            "hexValue": "3c73766720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f323030302f73766727207072657365727665417370656374526174696f3d27784d696e594d696e206d656574272076696577426f783d273020302033353020333530273e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20323470783b207d3c2f7374796c653e3c726563742077696474683d273130302527206865696768743d2731303025272066696c6c3d27626c61636b27202f3e3c7465787420783d273530252720793d273530252720636c6173733d27626173652720646f6d696e616e742d626173656c696e653d276d6964646c652720746578742d616e63686f723d276d6964646c65273e",
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "801:305:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5474a65c4758b1be192bac48d9df389bb950be288ab1a511a5f5847deabdac3c",
                                "typeString": "literal_string \"<svg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='xMinYMin meet' viewBox='0 0 350 350'><style>.base { fill: white; font-family: serif; font-size: 24px; }</style><rect width='100%' height='100%' fill='black' /><text x='50%' y='50%' class='base' dominant-baseline='middle' text-anchor='middle'>\""
                            },
                            "value": "<svg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='xMinYMin meet' viewBox='0 0 350 350'><style>.base { fill: white; font-family: serif; font-size: 24px; }</style><rect width='100%' height='100%' fill='black' /><text x='50%' y='50%' class='base' dominant-baseline='middle' text-anchor='middle'>"
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 31,
                            "nodeType": "Block",
                            "src": "1151:62:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4c65747341736b4e6674436f6e747261637420436f6e7374727563746f72",
                                                "id": 28,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1173:32:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4b929db43c2045b7e22fd8604bbdd20dab7dbf47c901af1115aadc85b7b2fe47",
                                                    "typeString": "literal_string \"LetsAskNftContract Constructor\""
                                                },
                                                "value": "LetsAskNftContract Constructor"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_4b929db43c2045b7e22fd8604bbdd20dab7dbf47c901af1115aadc85b7b2fe47",
                                                    "typeString": "literal_string \"LetsAskNftContract Constructor\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 25,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10109,
                                                "src": "1161:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$10109_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 27,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2640,
                                            "src": "1161:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) view"
                                            }
                                        },
                                        "id": 29,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1161:45:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 30,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1161:45:0"
                                }
                            ]
                        },
                        "id": 32,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4c65747341736b",
                                        "id": 21,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1134:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c66b6c055e97cfd7b1aa175bc4d48db7f78f49b14e25049ccd026bd3bb358b14",
                                            "typeString": "literal_string \"LetsAsk\""
                                        },
                                        "value": "LetsAsk"
                                    },
                                    {
                                        "hexValue": "4c41",
                                        "id": 22,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1145:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
                                            "typeString": "literal_string \"LA\""
                                        },
                                        "value": "LA"
                                    }
                                ],
                                "id": 23,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 20,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1011,
                                    "src": "1127:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1127:23:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 19,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1124:2:0"
                        },
                        "returnParameters": {
                            "id": 24,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1151:0:0"
                        },
                        "scope": 145,
                        "src": "1113:100:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 143,
                            "nodeType": "Block",
                            "src": "1288:1139:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 46,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "id": 42,
                                                                "name": "data",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 36,
                                                                "src": "1312:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            ],
                                                            "id": 41,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1306:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                "typeString": "type(bytes storage pointer)"
                                                            },
                                                            "typeName": {
                                                                "id": 40,
                                                                "name": "bytes",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1306:5:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 43,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1306:11:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    },
                                                    "id": 44,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1306:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 45,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1327:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "1306:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "456d707479207175657374696f6e20746f206d696e74",
                                                "id": 47,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1330:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_befb3de35bccaa812144fd2ccc264b9ffaf4cabddb8d54f746cd59b532e6ba92",
                                                    "typeString": "literal_string \"Empty question to mint\""
                                                },
                                                "value": "Empty question to mint"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_befb3de35bccaa812144fd2ccc264b9ffaf4cabddb8d54f746cd59b532e6ba92",
                                                    "typeString": "literal_string \"Empty question to mint\""
                                                }
                                            ],
                                            "id": 39,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1298:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 48,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1298:57:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 49,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1298:57:0"
                                },
                                {
                                    "assignments": [
                                        51
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 51,
                                            "mutability": "mutable",
                                            "name": "newItemId",
                                            "nameLocation": "1373:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 143,
                                            "src": "1365:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 50,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1365:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 55,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 52,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15,
                                                "src": "1385:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Counter_$1623_storage",
                                                    "typeString": "struct Counters.Counter storage ref"
                                                }
                                            },
                                            "id": 53,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "current",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1635,
                                            "src": "1385:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1623_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1623_storage_ptr_$",
                                                "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                            }
                                        },
                                        "id": 54,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1385:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1365:39:0"
                                },
                                {
                                    "assignments": [
                                        57
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 57,
                                            "mutability": "mutable",
                                            "name": "finalSvg",
                                            "nameLocation": "1428:8:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 143,
                                            "src": "1414:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 56,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1414:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 67,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 62,
                                                        "name": "baseSvg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 18,
                                                        "src": "1476:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_storage",
                                                            "typeString": "string storage ref"
                                                        }
                                                    },
                                                    {
                                                        "id": 63,
                                                        "name": "data",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 36,
                                                        "src": "1485:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "3c2f746578743e3c2f7376673e",
                                                        "id": 64,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1491:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_5df2eac721c34a044fddade0db4a2fa0a23894f242f8b8ab9056c3dcb3736e8a",
                                                            "typeString": "literal_string \"</text></svg>\""
                                                        },
                                                        "value": "</text></svg>"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_storage",
                                                            "typeString": "string storage ref"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_5df2eac721c34a044fddade0db4a2fa0a23894f242f8b8ab9056c3dcb3736e8a",
                                                            "typeString": "literal_string \"</text></svg>\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 60,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "1459:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 61,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1459:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 65,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1459:48:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 59,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1439:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 58,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1439:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1439:78:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1414:103:0"
                                },
                                {
                                    "assignments": [
                                        69
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 69,
                                            "mutability": "mutable",
                                            "name": "questionTo",
                                            "nameLocation": "1542:10:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 143,
                                            "src": "1528:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 68,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1528:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 80,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "5175657374696f6e202320",
                                                        "id": 74,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1592:13:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_b24749dc5315d944e0cf1444035f56f5fa2636ed115850ed94198fd405815381",
                                                            "typeString": "literal_string \"Question # \""
                                                        },
                                                        "value": "Question # "
                                                    },
                                                    {
                                                        "id": 75,
                                                        "name": "newItemId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 51,
                                                        "src": "1607:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "20",
                                                        "id": 76,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1618:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                                            "typeString": "literal_string \" \""
                                                        },
                                                        "value": " "
                                                    },
                                                    {
                                                        "id": 77,
                                                        "name": "to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 34,
                                                        "src": "1623:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_b24749dc5315d944e0cf1444035f56f5fa2636ed115850ed94198fd405815381",
                                                            "typeString": "literal_string \"Question # \""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                                            "typeString": "literal_string \" \""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 72,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "1575:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 73,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1575:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 78,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1575:51:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 71,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1555:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 70,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1555:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 79,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1555:81:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1528:108:0"
                                },
                                {
                                    "assignments": [
                                        82
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 82,
                                            "mutability": "mutable",
                                            "name": "json",
                                            "nameLocation": "1661:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 143,
                                            "src": "1647:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 81,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1647:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 106,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "7b226e616d65223a2022",
                                                                        "id": 91,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "1788:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_a773e20fe2bdb77cb0a7501a4c05f8a017bb76d7a29840c69b1dbdd75ee042cc",
                                                                            "typeString": "literal_string \"{\"name\": \"\""
                                                                        },
                                                                        "value": "{\"name\": \""
                                                                    },
                                                                    {
                                                                        "id": 92,
                                                                        "name": "questionTo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 69,
                                                                        "src": "1826:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                            "typeString": "string memory"
                                                                        }
                                                                    },
                                                                    {
                                                                        "hexValue": "222c20226465736372697074696f6e223a20224c6574732041736b202d205175657374696f6e20746865207374617475732051756f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b6261736536342c",
                                                                        "id": 93,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "1862:94:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_b4b80f5ded79693ba0291c0429c5ab1dbed9bc93a831ae7cd93d9a88cb16871f",
                                                                            "typeString": "literal_string \"\", \"description\": \"Lets Ask - Question the status Quo\", \"image\": \"data:image/svg+xml;base64,\""
                                                                        },
                                                                        "value": "\", \"description\": \"Lets Ask - Question the status Quo\", \"image\": \"data:image/svg+xml;base64,"
                                                                    },
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "arguments": [
                                                                                    {
                                                                                        "id": 98,
                                                                                        "name": "finalSvg",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 57,
                                                                                        "src": "2002:8:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                                            "typeString": "string memory"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "argumentTypes": [
                                                                                        {
                                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                                            "typeString": "string memory"
                                                                                        }
                                                                                    ],
                                                                                    "id": 97,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                                    "src": "1996:5:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                                        "typeString": "type(bytes storage pointer)"
                                                                                    },
                                                                                    "typeName": {
                                                                                        "id": 96,
                                                                                        "name": "bytes",
                                                                                        "nodeType": "ElementaryTypeName",
                                                                                        "src": "1996:5:0",
                                                                                        "typeDescriptions": {}
                                                                                    }
                                                                                },
                                                                                "id": 99,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "typeConversion",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "1996:15:0",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                                    "typeString": "bytes memory"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                                    "typeString": "bytes memory"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 94,
                                                                                "name": "Base64",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 2045,
                                                                                "src": "1982:6:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_contract$_Base64_$2045_$",
                                                                                    "typeString": "type(library Base64)"
                                                                                }
                                                                            },
                                                                            "id": 95,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "encode",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 1983,
                                                                            "src": "1982:13:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                                                                "typeString": "function (bytes memory) pure returns (string memory)"
                                                                            }
                                                                        },
                                                                        "id": 100,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "1982:30:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                            "typeString": "string memory"
                                                                        }
                                                                    },
                                                                    {
                                                                        "hexValue": "227d",
                                                                        "id": 101,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "2038:4:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                                                            "typeString": "literal_string \"\"}\""
                                                                        },
                                                                        "value": "\"}"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_a773e20fe2bdb77cb0a7501a4c05f8a017bb76d7a29840c69b1dbdd75ee042cc",
                                                                            "typeString": "literal_string \"{\"name\": \"\""
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                            "typeString": "string memory"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_b4b80f5ded79693ba0291c0429c5ab1dbed9bc93a831ae7cd93d9a88cb16871f",
                                                                            "typeString": "literal_string \"\", \"description\": \"Lets Ask - Question the status Quo\", \"image\": \"data:image/svg+xml;base64,\""
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                            "typeString": "string memory"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                                                            "typeString": "literal_string \"\"}\""
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 89,
                                                                        "name": "abi",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967295,
                                                                        "src": "1746:3:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_abi",
                                                                            "typeString": "abi"
                                                                        }
                                                                    },
                                                                    "id": 90,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "encodePacked",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "1746:16:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                        "typeString": "function () pure returns (bytes memory)"
                                                                    }
                                                                },
                                                                "id": 102,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1746:318:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            ],
                                                            "id": 88,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1718:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                                "typeString": "type(string storage pointer)"
                                                            },
                                                            "typeName": {
                                                                "id": 87,
                                                                "name": "string",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1718:6:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 103,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1718:364:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "id": 86,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1695:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                        "typeString": "type(bytes storage pointer)"
                                                    },
                                                    "typeName": {
                                                        "id": 85,
                                                        "name": "bytes",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1695:5:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 104,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1695:401:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 83,
                                                "name": "Base64",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2045,
                                                "src": "1668:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_Base64_$2045_$",
                                                    "typeString": "type(library Base64)"
                                                }
                                            },
                                            "id": 84,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "encode",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1983,
                                            "src": "1668:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                                "typeString": "function (bytes memory) pure returns (string memory)"
                                            }
                                        },
                                        "id": 105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1668:438:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1647:459:0"
                                },
                                {
                                    "assignments": [
                                        108
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 108,
                                            "mutability": "mutable",
                                            "name": "finalTokenUri",
                                            "nameLocation": "2131:13:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 143,
                                            "src": "2117:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 107,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2117:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 117,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                                                        "id": 113,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2184:31:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                                            "typeString": "literal_string \"data:application/json;base64,\""
                                                        },
                                                        "value": "data:application/json;base64,"
                                                    },
                                                    {
                                                        "id": 114,
                                                        "name": "json",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 82,
                                                        "src": "2217:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                                            "typeString": "literal_string \"data:application/json;base64,\""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 111,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "2167:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 112,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2167:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 115,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2167:55:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 110,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2147:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 109,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2147:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 116,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2147:85:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2117:115:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 119,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2253:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 120,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2253:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 121,
                                                "name": "newItemId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 51,
                                                "src": "2265:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 118,
                                            "name": "_safeMint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                640,
                                                669
                                            ],
                                            "referencedDeclaration": 640,
                                            "src": "2243:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2243:32:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 123,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2243:32:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 125,
                                                "name": "newItemId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 51,
                                                "src": "2298:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 126,
                                                "name": "finalTokenUri",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 108,
                                                "src": "2309:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 124,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1242,
                                            "src": "2285:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 127,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2285:38:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 128,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2285:38:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 129,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15,
                                                "src": "2333:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Counter_$1623_storage",
                                                    "typeString": "struct Counters.Counter storage ref"
                                                }
                                            },
                                            "id": 131,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "increment",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1649,
                                            "src": "2333:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1623_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1623_storage_ptr_$",
                                                "typeString": "function (struct Counters.Counter storage pointer)"
                                            }
                                        },
                                        "id": 132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2333:21:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 133,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2333:21:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4c65747341736b204e4654206d696e746564",
                                                "id": 137,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2376:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_eb7859c68f97cc1cf264eefefbdbae21dcb459d091261164473071650f7be320",
                                                    "typeString": "literal_string \"LetsAsk NFT minted\""
                                                },
                                                "value": "LetsAsk NFT minted"
                                            },
                                            {
                                                "id": 138,
                                                "name": "newItemId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 51,
                                                "src": "2398:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 139,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2409:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 140,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2409:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_eb7859c68f97cc1cf264eefefbdbae21dcb459d091261164473071650f7be320",
                                                    "typeString": "literal_string \"LetsAsk NFT minted\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 134,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10109,
                                                "src": "2364:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$10109_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 136,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3340,
                                            "src": "2364:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                                                "typeString": "function (string memory,uint256,address) view"
                                            }
                                        },
                                        "id": 141,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2364:56:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 142,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2364:56:0"
                                }
                            ]
                        },
                        "functionSelector": "2862b147",
                        "id": 144,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintLetsAskNft",
                        "nameLocation": "1228:14:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 37,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 34,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1257:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 144,
                                    "src": "1243:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 33,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1243:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 36,
                                    "mutability": "mutable",
                                    "name": "data",
                                    "nameLocation": "1275:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 144,
                                    "src": "1261:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 35,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1261:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1242:38:0"
                        },
                        "returnParameters": {
                            "id": 38,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1288:0:0"
                        },
                        "scope": 145,
                        "src": "1219:1208:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 146,
                "src": "640:1789:0",
                "usedErrors": []
            }
        ],
        "src": "37:2393:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mintLetsAskNft(string,string)": "2862b147",
        "name()": "06fdde03",
        "ownerOf(uint256)": "6352211e",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1501000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2634",
            "getApproved(uint256)": "4799",
            "isApprovedForAll(address,address)": "infinite",
            "mintLetsAskNft(string,string)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "2579",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26708",
            "supportsInterface(bytes4)": "534",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}